supersection (to be taught by head TFs, before sectioning)

Linux commands

    -   pwd
        - (present working directory)

    -   cd
        - (change directory)
            . means the current working directory
            .. means the above directory
            - means the previous directory you were in

    -   ls
        - (list)
            list out all of the files and directories in the pwd
            -l is a flag, which will list out file/ directories with permissions
            -a is another flag, listing all contents, even what is hidden
            
    -   mkdir
        - (make a directory)
            make a directory
    
    -   rm
        - (remove)
            remove something
            usually used with the flags -f (force), -r (recursive), or -rf (force recursive)
            if you want to remove a directory, you have to use the flag -r


    -   cp
        - (copy)
            you can easily copy a file
            if you want to copy a directory with its contents, however, you have to include -r
            
    -   mv
        - (move)
            move something
            move a file to another folder, or a folder to another folder, whatever
            if it doesn't already exist, this will creat it

    -   > 
        - (output)
            for example, I want to get my history and store it into a txt file
            ./tmp < number.txt        

    -   <
        - (input)
            use numbers from file and input them into a GetInt() command
            ./tmp2 > output.txt
        
    -   |
        - (pipe)
            which is like a combination of input and output 
            send the output of one program to another program for further processing
            ./tmp < number.txt | ./tmp2 > output.txt
            
    -   grep
        - (search for something)
            grep "fish"
            history | grep "fish"

Numerical Variables (& sizes on a 32 bit machine)

    -   int 
        - 4 bytes
    -   float 
        - 4 bytes
    -   double 
        - 8 bytes
    -   long long 
        - 8 bytes
        - you can say long long int, but in most cases you can get rid of the int,
          as C will just assume you're talking about an int. 
    -   char 
        - 1 byte
    -   short
        - 2 bytes
    -   string (which, in reality, is just a char*)
        - 4 bytes
    -   bool (false = 0; true != 0)
        - 1 byte

Math Operators

    -   add.
    -   sub.
    -   mult.
    -   div.
    -   mod.
    -   no exponentiation (^)

Division of Floats

    -   cast ints to floats 
        - 1/10 = 0 because of integer division, whereas (float) 1 / (float) 10 
          will give you .1.
        - think of it like this, let's say I want to represent 1/3 as a decimal.
          Well, that's really .3333 repeating; how can I represent this with
          a finite number of bits? I can't, so there is has to be some imprecision.
          

Operator Precedence

    -   just like in math, PEMDAS


Logical AND and Logical OR

    -   && / ||

Switch Statement (only works with integers)
    - when compiled, this will run much faster than an if-else statement

    - an example
        
        printf("Hi!, give me a natural number less than 2 please!\n");
        int n = GetInt();
        
        switch (n)
        {
            case 0:
                printf("Uhh, is this a natural number of not?"\n);
                break;
            case 1:
                printf("Thanks for the 1\n");
                break;
            case 2:
                printf("Thanks for the 2\n");
                break;
            default:
                printf("Thanks for nothing!\n");
       }

Ternary Operator

    - condition ? (if true) : (else if false);

To be continued ...
